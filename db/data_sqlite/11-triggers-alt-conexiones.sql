DROP TRIGGER IF EXISTS alt_conexiones_compute_fields_insert_trigger;
CREATE TRIGGER alt_conexiones_compute_fields_insert_trigger
AFTER INSERT ON alt_conexiones
FOR EACH ROW BEGIN
	UPDATE alt_conexiones SET demanda = ((SELECT COALESCE(f_var_estacional, 0) * COALESCE(f_var_horaria, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * ((SELECT COALESCE(dot_domiciliar, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * (SELECT CEIL(hab_conectados * (1 + (COALESCE(tasa_crecimiento, 0) * COALESCE(ano_horiz_sistema, 0) / 100))) FROM preferencias_disenho a JOIN alt_conexiones b ON a.cod_alternativa = b.cod_alternativa WHERE b.gid = alt_conexiones.gid) / 86400.0)) + COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) = 'Domiciliar' AND hab_conectados IS NOT NULL AND hab_conectados >= 0;
	UPDATE alt_conexiones SET demanda = ((SELECT COALESCE(f_var_estacional, 0) * COALESCE(f_var_horaria, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * ((SELECT COALESCE(dot_cantareras, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * (SELECT CEIL(hab_conectados * (1 + (COALESCE(tasa_crecimiento, 0) * COALESCE(ano_horiz_sistema, 0) / 100))) FROM preferencias_disenho a JOIN alt_conexiones b ON a.cod_alternativa = b.cod_alternativa WHERE b.gid = alt_conexiones.gid) / 86400.0)) + COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) = 'Llave pública' AND hab_conectados IS NOT NULL AND hab_conectados >= 0;
	UPDATE alt_conexiones SET demanda = COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (((SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) != 'Llave pública' AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) != 'Domiciliar') OR (hab_conectados IS NULL OR hab_conectados < 0));
END;

DROP TRIGGER IF EXISTS alt_conexiones_compute_fields_update_trigger;
CREATE TRIGGER alt_conexiones_compute_fields_update_trigger
AFTER UPDATE ON alt_conexiones
FOR EACH ROW BEGIN
	UPDATE alt_conexiones SET demanda = ((SELECT COALESCE(f_var_estacional, 0) * COALESCE(f_var_horaria, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * ((SELECT COALESCE(dot_domiciliar, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * (SELECT CEIL(hab_conectados * (1.0 + (COALESCE(tasa_crecimiento, 0) * COALESCE(ano_horiz_sistema, 0) / 100))) FROM preferencias_disenho a JOIN alt_conexiones b ON a.cod_alternativa = b.cod_alternativa WHERE b.gid = alt_conexiones.gid) / 86400.0)) + COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) = 'Domiciliar' AND hab_conectados IS NOT NULL AND hab_conectados >= 0;
	UPDATE alt_conexiones SET demanda = ((SELECT COALESCE(f_var_estacional, 0) * COALESCE(f_var_horaria, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * ((SELECT COALESCE(dot_cantareras, 0) FROM preferencias_disenho WHERE cod_alternativa = alt_conexiones.cod_alternativa) * (SELECT CEIL(hab_conectados * (1.0 + (COALESCE(tasa_crecimiento, 0) * COALESCE(ano_horiz_sistema, 0) / 100))) FROM preferencias_disenho a JOIN alt_conexiones b ON a.cod_alternativa = b.cod_alternativa WHERE b.gid = alt_conexiones.gid) / 86400.0)) + COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) = 'Llave pública' AND hab_conectados IS NOT NULL AND hab_conectados >= 0;
	UPDATE alt_conexiones SET demanda = COALESCE(q_extra, 0)/86400.0 WHERE gid = NEW.gid AND (((SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) != 'Llave pública' AND (SELECT tipo_distribucion FROM alternativas WHERE alt_conexiones.cod_alternativa = cod_alternativa) != 'Domiciliar') OR (hab_conectados IS NULL OR hab_conectados < 0));
END;

